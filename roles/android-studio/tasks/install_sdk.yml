---
- name: Check if Android SDK manager is installed
  stat:
    path: "{{ android_sdk_root }}/cmdline-tools/latest"
  register: manager

# Downloads are sourced from https://developer.android.com/studio#command-line-tools-only
- name: Ensure commandline-tools archive is downloaded
  get_url:
    checksum: "sha256:7bc5c72ba0275c80a8f19684fb92793b83a6b5c94d4d179fc5988930282d7e64"
    dest: "/tmp/commandlinetools-mac-11076708_latest.zip"
    url: "https://dl.google.com/android/repository/commandlinetools-mac-11076708_latest.zip"
  register: manager_downloaded
  when: not manager.stat.exists

- name: "Ensure Android sdk directory exists"
  file:
    mode: 0700
    path: "{{ android_sdk_root }}/cmdline-tools"
    state: directory
  when: not manager.stat.exists

- name: Ensure older version of cmdline-tools is removed
  file:
    path: "{{ android_sdk_root }}/cmdline-tools/latest"
    state: absent
  when: not manager.stat.exists

- name: Ensure commandline-tools is up-to-date
  unarchive:
    dest: "{{ android_sdk_root }}/cmdline-tools"
    remote_src: true
    src: "/tmp/commandlinetools-mac-11076708_latest.zip"
  when: not manager.stat.exists

- name: Rename commandline-tools directory after extraction
  command: "mv {{ android_sdk_root }}/cmdline-tools/cmdline-tools {{ android_sdk_root }}/cmdline-tools/latest"
  when: not manager.stat.exists

- name: Fetch the list of available SDKs and Tools
  command: "{{ android_sdk_root }}/cmdline-tools/latest/bin/sdkmanager --list"
  register: sdk_list

- name: Find the latest version of SDKs and Tools
  set_fact:
    build_tools_version:
      [
        "{{ sdk_list.stdout_lines | regex_findall('build-tools;\\d*\\.\\d*\\.\\d* ') | last | trim }}",
      ]
    emulator_version: [ emulator ]
    platform_tools_version: [ platform-tools ]
    platforms_version:
      [
        "{{ sdk_list.stdout_lines | regex_findall('platforms;android-\\d{2,}') | last }}",
      ]
    sources_version:
      [
        "{{ sdk_list.stdout_lines | regex_findall('sources;android-\\d*') | last }}",
      ]

- name: Ensure SDKs and Tools are installed
  shell: |
    set -o pipefail
    echo 'y' | ~/Library/Android/sdk/cmdline-tools/latest/bin/sdkmanager --install "{{ item }}"
  loop: "{{
    build_tools_version | default([]) +
    platforms_version | default([]) +
    sources_version | default([]) +
    emulator_version | default([]) +
    platform_tools_version | default([]) }}"

- name: Ensure Android tools are added to PATH
  blockinfile:
    block: |
      path+=({{ android_sdk_root }}/cmdline-tools/latest/bin)
      path+=({{ android_sdk_root }}/platform-tools)
      path+=({{ android_sdk_root }}/tools/bin)
      path+=({{ android_sdk_root }}/tools)
    create: true
    marker: "# {mark} Ansible managed block for Android Studio"
    mode: 0644
    path: ~/.zshenv
